{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramya\\\\OneDrive\\\\Desktop\\\\JSPractice\\\\FullStackOpen_Exercises\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = ({\n  handleClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: handleClick,\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n_c = Button;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0);\n  const [avg, setAvg] = useState(0);\n  const handleGood = () => {\n    const updatedGood = good + 1;\n    setGood(updatedGood);\n    setAll(updatedGood + bad + neutral);\n    avg = (updatedGood * 1 - bad * 1) / all;\n    setAvg(avg);\n  };\n  const handleBad = () => {\n    const updatedBad = bad + 1;\n    //all = good + updatedBad + neutral\n    setBad(updatedBad);\n    setAll(good + updatedBad + neutral);\n  };\n  const handleNeutral = () => {\n    const updatedNeutral = neutral + 1;\n    //all = good + bad + updatedNeutral\n    setNeutral(updatedNeutral);\n    setAll(good + bad + updatedNeutral);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this), \"neutral \", neutral, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 26\n      }, this), \"bad \", bad, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 18\n      }, this), \"all \", all, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this), \"avg \", (good * 1 + neutral * 0 + bad - 1) / all]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"F+Q74qYt3i8H+XwLU3jS7+ydE+s=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","handleClick","text","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","good","setGood","neutral","setNeutral","bad","setBad","all","setAll","avg","setAvg","handleGood","updatedGood","handleBad","updatedBad","handleNeutral","updatedNeutral","_c2","$RefreshReg$"],"sources":["C:/Users/ramya/OneDrive/Desktop/JSPractice/FullStackOpen_Exercises/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [all, setAll] = useState(0)\n  const [avg, setAvg] = useState(0)\n\n  const handleGood = () => {\n    const updatedGood = good + 1\n    setGood(updatedGood)\n    setAll(updatedGood + bad + neutral)\n    avg = (updatedGood*1 - bad*1)/all\n    setAvg(avg)\n  }\n\n  const handleBad = () => {\n    const updatedBad = bad + 1\n    //all = good + updatedBad + neutral\n    setBad(updatedBad)\n    setAll(good + updatedBad + neutral)\n  }\n\n  const handleNeutral = () => {\n    const updatedNeutral = neutral + 1\n    //all = good + bad + updatedNeutral\n    setNeutral(updatedNeutral)\n    setAll(good + bad + updatedNeutral)\n  }\n\n  return (\n    <div>\n      <h2>give feedback</h2>\n      <Button handleClick={handleGood} text='good' />\n      <Button handleClick={handleNeutral} text='neutral' />\n      <Button handleClick={handleBad} text='bad' />\n      <h2>statistics</h2>\n      <p>\n        good {good}<br/>\n        neutral {neutral}<br/>\n        bad {bad}<br/>\n        all {all} <br/>\n        avg {(good*1 + neutral*0 + bad-1)/all}\n      </p>\n    </div>\n  )\n} \n  \nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
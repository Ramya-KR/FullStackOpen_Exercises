{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramya\\\\OneDrive\\\\Desktop\\\\JSPractice\\\\FullStackOpen_Exercises\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = ({\n  handleClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: handleClick,\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n_c = Button;\nconst Statistics = props => {\n  if (props.all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"no feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", props.good, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 26\n      }, this), \"neutral \", props.neutral, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 32\n      }, this), \"bad \", props.bad, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 24\n      }, this), \"all \", props.all, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this), \"avergae \", (props.good * 1 - props.bad * 1) / props.all, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 64\n      }, this), \"positive \", props.good / props.all * 100, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0);\n  const handleGood = () => {\n    const updatedGood = good + 1;\n    setGood(updatedGood);\n    setAll(updatedGood + bad + neutral);\n  };\n  const handleBad = () => {\n    const updatedBad = bad + 1;\n    setBad(updatedBad);\n    setAll(good + updatedBad + neutral);\n  };\n  const handleNeutral = () => {\n    const updatedNeutral = neutral + 1;\n    setNeutral(updatedNeutral);\n    setAll(good + bad + updatedNeutral);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral,\n      all: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uTssgC4nlUSepBgkUpbW/ujAc84=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","handleClick","text","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Statistics","props","all","good","neutral","bad","_c2","App","_s","setGood","setNeutral","setBad","setAll","handleGood","updatedGood","handleBad","updatedBad","handleNeutral","updatedNeutral","_c3","$RefreshReg$"],"sources":["C:/Users/ramya/OneDrive/Desktop/JSPractice/FullStackOpen_Exercises/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst Statistics = (props) => {\n  if(props.all === 0){\n    return (\n      <div>\n        <h2>statistics</h2>\n        <p>no feedback given</p>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <h2>statistics</h2>\n      <p>\n        good {props.good}<br />\n        neutral {props.neutral}<br />\n        bad {props.bad}<br />\n        all {props.all} <br />\n        avergae {(props.good * 1 - props.bad * 1) / props.all} <br />\n        positive {(props.good / props.all) * 100}%\n      </p>\n    </div>)\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [all, setAll] = useState(0)\n\n  const handleGood = () => {\n    const updatedGood = good + 1\n    setGood(updatedGood)\n    setAll(updatedGood + bad + neutral)\n  }\n\n  const handleBad = () => {\n    const updatedBad = bad + 1\n    setBad(updatedBad)\n    setAll(good + updatedBad + neutral)\n  }\n\n  const handleNeutral = () => {\n    const updatedNeutral = neutral + 1\n    setNeutral(updatedNeutral)\n    setAll(good + bad + updatedNeutral)\n  }\n\n  return (\n    <div>\n      <h2>give feedback</h2>\n      <Button handleClick={handleGood} text='good' />\n      <Button handleClick={handleNeutral} text='neutral' />\n      <Button handleClick={handleBad} text='bad' />\n      <Statistics good={good} bad={bad} neutral={neutral} all={all} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}